<template>
    <div>
      <h2>Essay Feedback</h2>
      <p v-for="(sentence, index) in sentences" :key="index" @click="showFeedback(index)">
        <span :class="{'highlight': feedbackMap[index]}">{{ sentence }}</span>
      </p>
      <div v-if="selectedFeedback" class="feedback-box">
        <h3>Feedback:</h3>
        <p>{{ selectedFeedback }}</p>
      </div>
    </div>
  </template>
  
  <script>
  export default {
    props: {
      essayData: {
        type: Object,
        required: true
      }
    },
    data() {
      return {
        rawEssay: this.essayData.Result.rawEssay,
        feedback: this.essayData.Result.essayFeedback.sentsFeedback.map(fb => fb.sentFeedback),
        sentences: [],
        feedbackMap: {},
        selectedFeedback: null
      };
    },
    created() {
      this.sentences = this.rawEssay.split(/(?<=[.?!])\s+/);
      this.createFeedbackMap();
    },
    methods: {
      createFeedbackMap() {
        this.essayData.Result.essayFeedback.sentsFeedback.forEach((feedback, index) => {
          if (feedback.sentFeedback) {
            this.feedbackMap[index] = [feedback.sentFeedback];
          }
        });
      },
      showFeedback(index) {
        this.selectedFeedback = this.feedbackMap[index]?.join('\n') || 'No feedback available for this sentence.';
      }
    }
  };
  </script>
  
  
  <style>
  .highlight {
    color: aquamarine;
    cursor: pointer;
  }
  .feedback-box {
    margin-top: 20px;
    padding: 10px;
    font-family: 楷体;
    border-radius: 5px;
    border: 1px solid #cccccc00;
    background-color: #5296de;
  }
  </style>
  



  <template>
    <transition name="fade">
      <div class="evaluation-container">
        <!-- 整体评估结果展示 -->
        <div class="overall">
          <p>整体得分: <strong>{{ totalScore }}</strong> / {{ fullScore }} 分</p>
        </div>
        <div class="others">
          <p>语法得分: <strong>{{ majorScore.grammarScore }}</strong> 分</p>
          <p>结构得分: <strong>{{ majorScore.structureScore }}</strong> 分</p>
          <p>重点得分: <strong>{{ majorScore.emphasis }}</strong> 分</p>
        </div>
  
        <!-- 文章反馈与建议 -->
        <div class="feedback-container">
          <h3>作文建议与反馈</h3>
          <p>总体建议: {{ essayAdvice }}</p>
          <p>语法建议: {{ majorScore.grammarAdvice }}</p>
          <p>结构建议: {{ majorScore.structureAdvice }}</p>
        </div>
  
        <!-- 展示作文详细得分情况 -->
        <div class="words-container">
          <h3>详细评分</h3>
          <div v-for="(feature, key) in allFeatureScore" :key="key" class="feature-item">
            <p class="feature-text">{{ key }}: {{ feature }} 分</p>
          </div>
        </div>
  
        <!-- 原始作文展示 -->
        <div class="essay-container">
          <h3>原始作文</h3>
          <pre>{{ rawEssay }}</pre>
        </div>
      </div>
    </transition>
  </template>
  
  <script>
  export default {
    props: {
      visible: {
        type: Boolean,
        default: false
      },
      totalScore: {
        type: Number,
        default: 0
      },
      fullScore: {
        type: Number,
        default: 0
      },
      majorScore: {
        type: Object,
        default: () => ({
          grammarScore: 0,
          structureScore: 0,
          emphasis: 0,
          grammarAdvice: '',
          structureAdvice: ''
        })
      },
      essayAdvice: {
        type: String,
        default: ''
      },
      allFeatureScore: {
        type: Object,
        default: () => ({})
      },
      rawEssay: {
        type: String,
        default: ''
      }
    },
    methods: {
      // 根据得分计算颜色
      getScoreColor(score) {
        const red = Math.min(255, Math.max(0, Math.round(255 * (100 - score) / 100)));
        const green = Math.min(255, Math.max(0, Math.round(255 * score / 100)));
        return `rgb(${red}, ${green}, 0)`; // 红到绿的颜色渐变
      }
    }
  }
  </script>
  
  <style scoped>
  .evaluation-container {
    margin: 20px;
    padding: 20px;
    border: 1px solid #ccc;
    border-radius: 10px;
    background-color: #f9f9f9;
  }
  
  .overall {
    font-size: 20px;
    margin-bottom: 20px;
    color: #2c3e50;
  }
  
  .others {
    font-size: 16px;
    margin-bottom: 20px;
  }
  
  .feedback-container {
    margin-bottom: 20px;
  }
  
  .words-container {
    margin-bottom: 20px;
  }
  
  .feature-item {
    margin-bottom: 10px;
  }
  
  .feature-text {
    font-size: 14px;
    color: #34495e;
  }
  
  .essay-container {
    background-color: #f0f3f5;
    padding: 15px;
    border-radius: 5px;
  }
  
  pre {
    white-space: pre-wrap;
    word-wrap: break-word;
  }
  
  .fade-enter-active, .fade-leave-active {
    transition: opacity 0.5s;
  }
  
  .fade-enter, .fade-leave-to {
    opacity: 0;
  }
  </style>
  